import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { CalendarDays, Clock, Search, User } from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import { client, postsQuery, categoriesQuery, urlFor } from "@/lib/sanity";
import { Post, Category } from "@/lib/types";

async function getPosts(): Promise<Post[]> {
  try {
    const posts = await client.fetch(postsQuery);
    return posts || [];
  } catch (error) {
    console.error("Error fetching posts:", error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ Sanity –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    return getDemoPosts();
  }
}

async function getCategories(): Promise<Category[]> {
  try {
    const categories = await client.fetch(categoriesQuery);
    return categories || [];
  } catch (error) {
    console.error("Error fetching categories:", error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å–ª–∏ Sanity –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    return getDemoCategories();
  }
}

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
function getDemoPosts(): Post[] {
  return [
    {
      _id: "demo-1",
      title: "–ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —É—Å–ª–æ–≤–∏—è—Ö –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Ö–æ–¥—ã",
      slug: { current: "budgeting-uncertainty-methods" },
      excerpt:
        "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–≤ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —É—Å–ª–æ–≤–∏—è—Ö —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏.",
      mainImage: null,
      publishedAt: "2024-12-15T10:00:00Z",
      readTime: 7,
      featured: true,
      category: {
        title: "–ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
        slug: { current: "budgeting" },
        color: "blue",
      },
      author: {
        name: "–ï–ª–µ–Ω–∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞",
        slug: { current: "elena-finansova" },
        role: "CFO",
      },
    },
    {
      _id: "demo-2",
      title: "ABC-–∞–Ω–∞–ª–∏–∑: –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é",
      slug: { current: "abc-analysis-implementation" },
      excerpt:
        "–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é ABC-–∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞—Ç—Ä–∞—Ç –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞.",
      mainImage: null,
      publishedAt: "2024-12-12T10:00:00Z",
      readTime: 9,
      category: {
        title: "–ê–Ω–∞–ª–∏–∑ –∑–∞—Ç—Ä–∞—Ç",
        slug: { current: "cost-analysis" },
        color: "green",
      },
      author: {
        name: "–ú–∏—Ö–∞–∏–ª –ê–Ω–∞–ª–∏—Ç–∏–∫–æ–≤",
        slug: { current: "mikhail-analitikov" },
        role: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫",
      },
    },
  ];
}

function getDemoCategories(): Category[] {
  return [
    {
      title: "–ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
      slug: { current: "budgeting" },
      color: "blue",
    },
    {
      title: "–ê–Ω–∞–ª–∏–∑ –∑–∞—Ç—Ä–∞—Ç",
      slug: { current: "cost-analysis" },
      color: "green",
    },
    {
      title: "KPI",
      slug: { current: "kpi" },
      color: "purple",
    },
    {
      title: "–û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å",
      slug: { current: "reporting" },
      color: "red",
    },
  ];
}

function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString("ru-RU", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}

export default async function HomePage() {
  const [posts, categories] = await Promise.all([getPosts(), getCategories()]);

  const isSanityConfigured =
    process.env.NEXT_PUBLIC_SANITY_PROJECT_ID &&
    process.env.NEXT_PUBLIC_SANITY_PROJECT_ID !== "demo-project-id";

  const allCategories = [
    { title: "–í—Å–µ", slug: { current: "all" } },
    ...categories,
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Hero Section */}
      <section className="py-12 md:py-20 bg-gradient-to-r from-primary/10 to-secondary/10">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-4xl md:text-6xl font-bold mb-6">
            –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–ª–æ–≥ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–æ–º —É—á–µ—Ç–µ
          </h1>
          <p className="text-xl text-muted-foreground mb-8 max-w-2xl mx-auto">
            –ò–∑—É—á–∞–π—Ç–µ –º–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–æ–≥–æ —É—á–µ—Ç–∞, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏
            –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
              <Input placeholder="–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π..." className="pl-10" />
            </div>
            <Button>–ù–∞–π—Ç–∏</Button>
          </div>
        </div>
      </section>

      {!isSanityConfigured && (
        <section className="py-8 bg-yellow-50 border-y border-yellow-200">
          <div className="container mx-auto px-4">
            <div className="max-w-4xl mx-auto text-center">
              <h2 className="text-xl font-semibold text-yellow-800 mb-2">
                üöÄ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Sanity CMS
              </h2>
              <p className="text-yellow-700 mb-4">
                –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
                Sanity. –°–µ–π—á–∞—Å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button asChild variant="outline">
                  <Link href="/studio">–û—Ç–∫—Ä—ã—Ç—å CMS Studio</Link>
                </Button>
                <Button asChild>
                  <Link href="https://sanity.io" target="_blank">
                    –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç Sanity
                  </Link>
                </Button>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Categories */}
      <section className="py-8 border-b">
        <div className="container mx-auto px-4">
          <div className="flex flex-wrap gap-2 justify-center">
            {allCategories.map((category) => (
              <Badge
                key={category.slug.current}
                variant={
                  category.slug.current === "all" ? "default" : "secondary"
                }
                className="cursor-pointer hover:bg-primary hover:text-primary-foreground">
                {category.title}
              </Badge>
            ))}
          </div>
        </div>
      </section>

      {/* Blog Posts */}
      <main className="py-12">
        <div className="container mx-auto px-4">
          {posts.length === 0 ? (
            <div className="text-center py-12">
              <h2 className="text-2xl font-bold mb-4">–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h2>
              <p className="text-muted-foreground mb-6">
                –ü–æ–∫–∞ —á—Ç–æ —Å—Ç–∞—Ç–µ–π –Ω–µ—Ç. –î–æ–±–∞–≤—å—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ Sanity CMS.
              </p>
              <Button asChild>
                <Link href="/studio">–û—Ç–∫—Ä—ã—Ç—å CMS</Link>
              </Button>
            </div>
          ) : (
            <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
              {posts.map((post) => (
                <Link href={`/blog/${post.slug.current}`} key={post._id}>
                  <Card className="overflow-hidden hover:shadow-lg transition-shadow">
                    <div className="aspect-video relative">
                      <Image
                        src={"/placeholder.svg"}
                        alt={post.title}
                        fill
                        className="object-cover"
                      />
                    </div>
                    <CardHeader>
                      <div className="flex items-center justify-between mb-2">
                        <Badge variant="secondary">{post.category.title}</Badge>
                        <div className="flex items-center text-sm text-muted-foreground">
                          <Clock className="w-4 h-4 mr-1" />
                          {post.readTime} –º–∏–Ω
                        </div>
                      </div>
                      <CardTitle className="line-clamp-2 hover:text-primary">
                        {post.title}
                      </CardTitle>
                      <CardDescription className="line-clamp-3">
                        {post.excerpt}
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="flex items-center justify-between text-sm text-muted-foreground">
                        <div className="flex items-center">
                          <User className="w-4 h-4 mr-1" />
                          {post.author.name}
                        </div>
                        <div className="flex items-center">
                          <CalendarDays className="w-4 h-4 mr-1" />
                          {formatDate(post.publishedAt)}
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </Link>
              ))}
            </div>
          )}

          {posts.length > 0 && (
            <div className="text-center mt-12">
              <Button variant="outline" size="lg">
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ —Å—Ç–∞—Ç—å–∏
              </Button>
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
